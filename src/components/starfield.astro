---
---

<gg-starfield data-starfield="1000">
	<canvas></canvas>
</gg-starfield>

<style lang="scss">
	gg-starfield {
		@apply absolute inset-0;

		canvas {
			position: relative;
			display:block;
		}
	}
</style>

<script>
	class Star
	{
		x: number
		y: number
		offset: number
		duration: number
		size: number
		timer: number

		constructor(x: number, y: number, offset: number, duration: number = 100, size: number = 2)
		{
			// Constructor
			this.x            = x
			this.y            = y
			this.duration     = duration
			this.offset       = offset
			this.size         = size
			this.timer        = offset % duration
		}

		public draw(canvas: CanvasRenderingContext2D)
		{
			// Calculate animations
			if (this.timer > this.duration)
			{
				this.timer = 0
			}
			this.timer += 1

			// Calculate
			var framesize = Math.abs((this.timer / this.duration) - 0.5) * this.size + this.size/10

			// Update element
			canvas.beginPath()
			canvas.arc(this.x, this.y, framesize, 0, Math.PI * 2, false)
			canvas.fillStyle = 'white'
			canvas.fill()
		}
	}

	class ShootingStar
	{
		constructor(offset, duration = 100, size = 2)
		{
			// Constructor
			this.offset   = offset
			this.duration = duration
			this.size     = size
		}
	}

	class Starfield extends HTMLElement
	{
		readonly canvasElement: HTMLCanvasElement
		readonly canvas: CanvasRenderingContext2D
		readonly quantity: number

		readonly stars: Star[] = []

		constructor()
		{
			super()

			// HTML related
			const canvasElement = this.querySelector('canvas')
			if (!canvasElement) throw new Error('No canvas element found')
			this.canvasElement = canvasElement

			const canvas = canvasElement.getContext('2d')
			if (!canvas) throw new Error('No canvas context found')
			this.canvas = canvas

			const quantity = parseInt(this.dataset.starfield || 'NaN')
			if (isNaN(quantity)) throw new Error('No quantity found')
			this.quantity = quantity

			// Set canvas size
			canvasElement.width = window.innerWidth
			canvasElement.height = window.innerHeight

			// Spawn stars
			this.spawnStars()

			// Start animation
			this.renderFrame()
		}

		protected spawnStars()
		{
			for (let i = 0; i < this.quantity; ++i)
			{
				var positionX = window.innerWidth * Math.random()
				var positionY = window.innerHeight * Math.random()
				var offset    = Math.random() * 100
				var duration  = Math.random() * 50 + 50
				var size      = Math.random() * 2

				this.stars.push(new Star(positionX, positionY, offset, duration, size))
			}
		}

		protected renderFrame()
		{
			// Clear canvas
			this.canvas.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height)

			// Call all stars to update their animation
			for (let i = 0; i < this.quantity; ++i)
			{
				this.stars[i]?.draw(this.canvas)
			}

			// Loop function
			setTimeout(this.renderFrame.bind(this), 100)
		}
	}

	customElements.define('gg-starfield', Starfield)
</script>
